Output from paperile

@ARTICLE{Le_Pochat2018-ql,
  title         = "Tranco: A {Research-Oriented} Top Sites Ranking Hardened
                   Against Manipulation",
  author        = "Le Pochat, Victor and Van Goethem, Tom and Tajalizadehkhoob,
                   Samaneh and Korczy{\'n}ski, Maciej and Joosen, Wouter",
  abstract      = "In order to evaluate the prevalence of security and privacy
                   practices on a representative sample of the Web, researchers
                   rely on website popularity rankings such as the Alexa list.
                   While the validity and representativeness of these rankings
                   are rarely questioned, our findings show the contrary: we
                   show for four main rankings how their inherent properties
                   (similarity, stability, representativeness, responsiveness
                   and benignness) affect their composition and therefore
                   potentially skew the conclusions made in studies. Moreover,
                   we find that it is trivial for an adversary to manipulate
                   the composition of these lists. We are the first to
                   empirically validate that the ranks of domains in each of
                   the lists are easily altered, in the case of Alexa through
                   as little as a single HTTP request. This allows adversaries
                   to manipulate rankings on a large scale and insert malicious
                   domains into whitelists or bend the outcome of research
                   studies to their will. To overcome the limitations of such
                   rankings, we propose improvements to reduce the fluctuations
                   in list composition and guarantee better defenses against
                   manipulation. To allow the research community to work with
                   reliable and reproducible rankings, we provide Tranco, an
                   improved ranking that we offer through an online service
                   available at https://tranco-list.eu.",
  month         =  jun,
  year          =  2018,
  archivePrefix = "arXiv",
  primaryClass  = "cs.CR",
  eprint        = "1806.01156"
}

@ARTICLE{Cooper2008-yr,
  title    = "{RFC5280}: Internet X.509 Public Key Infrastructure Certificate
              and Certificate Revocation List ({CRL}) Profile",
  author   = "Cooper, D and Santesson, S and Farrell, S and Boeyen, S and
              {Housley, R: Polk, W}",
  abstract = "Internet X.509 Public Key Infrastructure Certificate and
              Certificate Revocation List (CRL) Profile (RFC )",
  year     =  2008
}

@MISC{Keeler2020-yj,
  title        = "Preloading Intermediate {CA} Certificates into Firefox",
  author       = "Keeler, Dana",
  abstract     = "Throughout 2020, Firefox users have been seeing fewer secure
                  connection errors while browsing the Web. We've been
                  improving connection errors overall for some time, and a new
                  feature called Intermediate ...",
  month        =  nov,
  year         =  2020,
  howpublished = "\url{https://blog.mozilla.org/security/2020/11/13/preloading-intermediate-ca-certificates-into-firefox}",
  note         = "Accessed: 2021-11-18",
  language     = "en"
}

@MISC{noauthor_undated-lc,
  title        = "Go {HTTP} Client {GET} Method",
  abstract     = "Package http provides HTTP client and server implementations.",
  howpublished = "\url{https://pkg.go.dev/net/http}",
  note         = "Accessed: 2021-11-17"
}

@MISC{noauthor_undated-mm,
  title        = "{ICANN} Centralised Zone Data Service",
  abstract     = "Sign in to Centralized Zone Data Service",
  howpublished = "\url{https://czds.icann.org/home}",
  note         = "Accessed: 2021-11-17"
}

@MISC{noauthor_undated-mt,
  title        = "Tranco",
  howpublished = "\url{https://tranco-list.eu/}",
  note         = "Accessed: 2021-11-17"
}

@MISC{noauthor_undated-sz,
  title        = "Majestic Million - Majestic",
  howpublished = "\url{https://majestic.com/reports/majestic-million}",
  note         = "Accessed: 2021-11-17"
}

@MISC{noauthor_undated-ku,
  title        = "Cisco Popularity List",
  howpublished = "\url{http://s3-us-west-1.amazonaws.com/umbrella-static/index.html}",
  note         = "Accessed: 2021-11-17"
}

@MISC{noauthor_undated-wh,
  title        = "Alexa - Top sites",
  howpublished = "\url{https://www.alexa.com/topsites}",
  note         = "Accessed: 2021-11-17"
}

@INPROCEEDINGS{Poteat2021-zr,
  title     = "Who you gonna call? an empirical evaluation of website
               security.txt deployment",
  booktitle = "Proceedings of the 21st {ACM} Internet Measurement Conference",
  author    = "Poteat, Tara and Li, Frank",
  abstract  = "The security.txt proposed standard allows organizations to
               define how security researchers should disclose security issues.
               While it is still proceeding through the final stages of
               standardization, major online services have already adopted the
               standard (such as Google, Facebook, LinkedIn, and Github). In
               this work, we conduct an empirical investigation into how
               websites are deploying security.txt. We first monitor
               security.txt adoption over a 15-month period, identifying the
               level of deployment for top websites. We also characterize the
               information being provided through security.txt and issues
               present in the provided data. Ultimately, our analysis sheds
               light on how the security.txt mechanism manifests in practice
               and its implications for vulnerability reporting, particularly
               for large-scale automated notification campaigns.",
  publisher = "Association for Computing Machinery",
  pages     = "526--532",
  series    = "IMC '21",
  month     =  nov,
  year      =  2021,
  address   = "New York, NY, USA",
  location  = "Virtual Event"
}

@INPROCEEDINGS{Lavrenovs2018-dl,
  title     = "{HTTP} security headers analysis of top one million websites",
  booktitle = "2018 10th International Conference on Cyber Conflict ({CyCon})",
  author    = "Lavrenovs, Arturs and Mel{\'o}n, F Jes{\'u}s Rubio",
  abstract  = "We present research on the security of the most popular
               websites, ranked according to Alexa's top one million list,
               based on an HTTP response headers analysis. For each of the
               domains included in the list, we made four different requests:
               an HTTP/1.1 request to the domain itself and to its ``www''
               subdomain and two more equivalent HTTPS requests. Redirections
               were always followed. A detailed discussion of the request
               process and main outcomes is presented, including X.509
               certificate issues and comparison of results with equivalent
               HTTP/2 requests. The body of the responses was discarded, and
               the HTTP response header fields were stored in a database. We
               analysed the prevalence of the most important response headers
               related to web security aspects. In particular, we took into
               account Strict- Transport-Security, Content-Security-Policy,
               X-XSS-Protection, X-Frame-Options, Set-Cookie (for session
               cookies) and X-Content-Type. We also reviewed the contents of
               response HTTP headers that potentially could reveal unwanted
               information, like Server (and related headers), Date and
               Referrer-Policy. This research offers an up-to-date survey of
               current prevalence of web security policies implemented through
               HTTP response headers and concludes that most popular sites tend
               to implement it noticeably more often than less popular ones.
               Equally, HTTPS sites seem to be far more eager to implement
               those policies than HTTP only websites. A comparison with
               previous works show that web security policies based on HTTP
               response headers are continuously growing, but still far from
               satisfactory widespread adoption.",
  pages     = "345--370",
  month     =  may,
  year      =  2018,
  keywords  = "Security;Uniform resource locators;Protocols;Tools;Charge
               coupled devices;World Wide Web;Databases;web security;HTTP
               headers;top one million websites survey;X.509
               certificate;HTTP/2;HTTPS;HTTP Strict Transport Security;Content
               Security Policy"
}

@ARTICLE{Holz2020-ha,
  title     = "Tracking the deployment of TLS 1.3 on the Web: A story of experimentation and centralization",
  author    = "Holz, Ralph and Hiller, Jens and Amann, Johanna and Razaghpanah,
               Abbas and Jost, Thomas and Vallina-Rodriguez, Narseo and
               Hohlfeld, Oliver",
  journal   = "Comput. Commun. Rev.",
  publisher = "Association for Computing Machinery (ACM)",
  volume    =  50,
  number    =  3,
  pages     = "3--15",
  month     =  jul,
  year      =  2020,
  language  = "en"
}

@INPROCEEDINGS{Kotzias2018-wd,
  title     = "Coming of Age: A Longitudinal Study of {TLS} Deployment",
  booktitle = "Proceedings of the Internet Measurement Conference 2018",
  author    = "Kotzias, Platon and Razaghpanah, Abbas and Amann, Johanna and
               Paterson, Kenneth G and Vallina-Rodriguez, Narseo and Caballero,
               Juan",
  abstract  = "The Transport Layer Security (TLS) protocol is the de-facto
               standard for encrypted communication on the Internet. However,
               it has been plagued by a number of different attacks and
               security issues over the last years. Addressing these attacks
               requires changes to the protocol, to server- or client-software,
               or to all of them. In this paper we conduct the first
               large-scale longitudinal study examining the evolution of the
               TLS ecosystem over the last six years. We place a special focus
               on the ecosystem's evolution in response to high-profile
               attacks.For our analysis, we use a passive measurement dataset
               with more than 319.3B connections since February 2012, and an
               active dataset that contains TLS and SSL scans of the entire
               IPv4 address space since August 2015. To identify the evolution
               of specific clients we also create the---to our
               knowledge---largest TLS client fingerprint database to date,
               consisting of 1,684 fingerprints.We observe that the ecosystem
               has shifted significantly since 2012, with major changes in
               which cipher suites and TLS extensions are offered by clients
               and accepted by servers having taken place. Where possible, we
               correlate these with the timing of specific attacks on TLS. At
               the same time, our results show that while clients, especially
               browsers, are quick to adopt new algorithms, they are also slow
               to drop support for older ones. We also encounter significant
               amounts of client software that probably unwittingly offer
               unsafe ciphers. We discuss these findings in the context of long
               tail effects in the TLS ecosystem.",
  publisher = "Association for Computing Machinery",
  pages     = "415--428",
  series    = "IMC '18",
  month     =  oct,
  year      =  2018,
  address   = "New York, NY, USA",
  location  = "Boston, MA, USA"
}

% The entry below contains non-ASCII chars that could not be converted
% to a LaTeX equivalent.
@ARTICLE{Roth2020-hg,
  title     = "Complex security policy? a longitudinal analysis of deployed
               content security policies",
  author    = "Roth, S and Barron, T and Calzavara, S and Nikiforakis, N and
               {others}",
  abstract  = "The Content Security Policy (CSP) mechanism was developed as a
               mitigation against script injection attacks in 2010. In this
               paper, we leverage the unique vantage point of the Internet
               Archive to conduct a historical and longitudinal analysis of how
               CSP deployment has evolved for a set of 10,000 highly ranked
               domains. In doing so, we document the longterm struggle site
               operators face when trying to roll out CSP for content
               restriction and highlight that even seemingly secure whitelists
               can be bypassed through expired or typo domains …",
  journal   = "Proceedings of the 27th",
  publisher = "par.nsf.gov",
  year      =  2020
}

@INPROCEEDINGS{Van_Goethem2014-ao,
  title     = "{Large-Scale} Security Analysis of the Web: Challenges and
               Findings",
  booktitle = "Trust and Trustworthy Computing",
  author    = "van Goethem, Tom and Chen, Ping and Nikiforakis, Nick and
               Desmet, Lieven and Joosen, Wouter",
  abstract  = "As the web expands in size and adoption, so does the interest of
               attackers who seek to exploit web applications and exfiltrate
               user data. While there is a steady stream of news regarding
               major breaches and millions of user credentials compromised, it
               is logical to assume that, over time, the applications of the
               bigger players of the web are becoming more secure. However, as
               these applications become resistant to most prevalent attacks,
               adversaries may be tempted to move to easier, unprotected
               targets which still hold sensitive user data.",
  publisher = "Springer International Publishing",
  pages     = "110--126",
  year      =  2014
}

@INPROCEEDINGS{Michael2015-hn,
  title     = "Upgrading HTTPS in Mid-Air:
               An Empirical Study of Strict Transport Security and Key Pinning",
  booktitle = "{NDSS} Symposium",
  author    = "Michael, K and Joseph, B",
  year      =  2015
}

@ARTICLE{Patil2017-bg,
  title     = "An insecure wild web: A large-scale study of effectiveness of
               web security mechanisms",
  author    = "Patil, Kailas and {Vishwakarma Institute of Information
               Technology, India}",
  journal   = "ICTACT j. commun. technol.",
  publisher = "ICT Academy",
  volume    =  08,
  number    =  01,
  pages     = "1466--1471",
  month     =  mar,
  year      =  2017
}

@INPROCEEDINGS{Kumar2017-qw,
  title     = "Security Challenges in an Increasingly Tangled Web",
  booktitle = "Proceedings of the 26th International Conference on World Wide
               Web",
  author    = "Kumar, Deepak and Ma, Zane and Durumeric, Zakir and Mirian,
               Ariana and Mason, Joshua and Halderman, J Alex and Bailey,
               Michael",
  abstract  = "Over the past 20 years, websites have grown increasingly complex
               and interconnected. In 2016, only a negligible number of sites
               are dependency free, and over 90\% of sites rely on external
               content. In this paper, we investigate the current state of web
               dependencies and explore two security challenges associated with
               the increasing reliance on external services: (1) the expanded
               attack surface associated with serving unknown, implicitly
               trusted third-party content, and (2) how the increased set of
               external dependencies impacts HTTPS adoption. We hope that by
               shedding light on these issues, we can encourage developers to
               consider the security risks associated with serving third-party
               content and prompt service providers to more widely deploy
               HTTPS.",
  publisher = "International World Wide Web Conferences Steering Committee",
  pages     = "677--684",
  series    = "WWW '17",
  month     =  apr,
  year      =  2017,
  address   = "Republic and Canton of Geneva, CHE",
  keywords  = "website complexity, https adoption, privacy/tracking",
  location  = "Perth, Australia"
}

@ARTICLE{Yusof2016-wy,
  title    = "Mitigating {Cross-Site} Scripting Attacks with a Content Security
              Policy",
  author   = "Yusof, Imran and Pathan, Al-Sakib Khan",
  abstract = "A content security policy (CSP) can help Web application
              developers and server administrators better control website
              content and avoid vulnerabilities to cross-site scripting (XSS).
              In experiments with a prototype website, the authors' CSP
              implementation successfully mitigated all XSS attack types in
              four popular browsers.",
  journal  = "Computer",
  volume   =  49,
  number   =  3,
  pages    = "56--63",
  month    =  mar,
  year     =  2016,
  keywords = "Browsers;Computer security;Content
              management;Payloads;Loading;Uniform resource locators;Media;Web
              services;Internet;security;Internet/Web technology;content
              security policy;CSP;cross-site scripting;XSS;Web applications;Web
              vulnerabilities"
}

@INPROCEEDINGS{Weichselbaum2016-kf,
  title     = "{CSP} Is Dead, Long Live {CSP}! On the Insecurity of Whitelists
               and the Future of Content Security Policy",
  booktitle = "Proceedings of the 2016 {ACM} {SIGSAC} Conference on Computer
               and Communications Security",
  author    = "Weichselbaum, Lukas and Spagnuolo, Michele and Lekies, Sebastian
               and Janc, Artur",
  abstract  = "Content Security Policy is a web platform mechanism designed to
               mitigate cross-site scripting (XSS), the top security
               vulnerability in modern web applications. In this paper, we take
               a closer look at the practical benefits of adopting CSP and
               identify significant flaws in real-world deployments that result
               in bypasses in 94.72\% of all distinct policies. We base our
               Internet-wide analysis on a search engine corpus of
               approximately 100 billion pages from over 1 billion hostnames;
               the result covers CSP deployments on 1,680,867 hosts with 26,011
               unique CSP policies -- the most comprehensive study to date. We
               introduce the security-relevant aspects of the CSP specification
               and provide an in-depth analysis of its threat model, focusing
               on XSS protections. We identify three common classes of CSP
               bypasses and explain how they subvert the security of a policy.
               We then turn to a quantitative analysis of policies deployed on
               the Internet in order to understand their security benefits. We
               observe that 14 out of the 15 domains most commonly whitelisted
               for loading scripts contain unsafe endpoints; as a consequence,
               75.81\% of distinct policies use script whitelists that allow
               attackers to bypass CSP. In total, we find that 94.68\% of
               policies that attempt to limit script execution are ineffective,
               and that 99.34\% of hosts with CSP use policies that offer no
               benefit against XSS. Finally, we propose the ``strict-dynamic''
               keyword, an addition to the specification that facilitates the
               creation of policies based on cryptographic nonces, without
               relying on domain whitelists. We discuss our experience
               deploying such a nonce-based policy in a complex application and
               provide guidance to web authors for improving their policies.",
  publisher = "Association for Computing Machinery",
  pages     = "1376--1387",
  series    = "CCS '16",
  month     =  oct,
  year      =  2016,
  address   = "New York, NY, USA",
  keywords  = "web security, cross-site scripting, content security policy",
  location  = "Vienna, Austria"
}

@ARTICLE{Ying2016-ag,
  title     = "{CSP} adoption: current status and future prospects",
  author    = "Ying, Ming and Li, Shu Qin",
  abstract  = "ecurity policy CSP is a security mechanism that can be used to
               mitigate cross-site scripting also known as XSS and other
               related attacks. Although CSP is a promising mechanism to
               prevent XSS attack, it is not widely used. In this paper, we
               built a Java-based web crawler to examine the current state of
               hypertext transfer protocol security headers and the adoption
               rate of CSP. The results show that usage for hypertext transfer
               protocol security headers is increasing. As for CSP, seven
               websites use CSP among the top 100 popular sites 8\% both in
               January and June 2015; 716 0.066\% and 1241 0.133\% websites
               enable CSP in January and June 2015, respectively 73\% increase.
               A detailed analysis of the CSP settings that websites used is
               also performed. This analysis shows that many websites with CSP
               do not have the correct policies to prevent XSS. Finally,
               challenges for adopting CSP and methods to increase the adoption
               rate are discussed. Copyright \copyright{} 2016 John Wiley \&
               Sons, Ltd.",
  journal   = "Secur. Commun. Netw.",
  publisher = "Wiley",
  volume    =  9,
  number    =  17,
  pages     = "4557--4573",
  month     =  nov,
  year      =  2016,
  language  = "en"
}

@ARTICLE{Buchanan2018-xz,
  title     = "Analysis of the adoption of security headers in {HTTP}",
  author    = "Buchanan, William J and Helme, Scott and Woodward, Alan",
  journal   = "IET Inf. Secur.",
  publisher = "Institution of Engineering and Technology (IET)",
  volume    =  12,
  number    =  2,
  pages     = "118--126",
  month     =  mar,
  year      =  2018,
  language  = "en"
}

@MISC{Beurdouche2015-ga,
  title   = "A Messy State of the Union: Taming the Composite State Machines of
             {TLS}",
  author  = "Beurdouche, Benjamin and Bhargavan, Karthikeyan and
             Delignat-Lavaud, Antoine and Fournet, Cedric and Kohlweiss,
             Markulf and Pironti, Alfredo and Strub, Pierre-Yves and
             Zinzindohoue, Jean Karim",
  journal = "2015 IEEE Symposium on Security and Privacy",
  year    =  2015
}

@INPROCEEDINGS{Al_Fardan2013-sw,
  title     = "Lucky Thirteen: Breaking the {TLS} and {DTLS} Record Protocols",
  booktitle = "2013 {IEEE} Symposium on Security and Privacy",
  author    = "Al Fardan, Nadhem J and Paterson, Kenneth G",
  abstract  = "The Transport Layer Security (TLS) protocol aims to provide
               confidentiality and integrity of data in transit across
               untrusted networks. TLS has become the de facto secure protocol
               of choice for Internet and mobile applications. DTLS is a
               variant of TLS that is growing in importance. In this paper, we
               present distinguishing and plaintext recovery attacks against
               TLS and DTLS. The attacks are based on a delicate timing
               analysis of decryption processing in the two protocols. We
               include experimental results demonstrating the feasibility of
               the attacks in realistic network environments for several
               different implementations of TLS and DTLS, including the leading
               OpenSSL implementations. We provide countermeasures for the
               attacks. Finally, we discuss the wider implications of our
               attacks for the cryptographic design used by TLS and DTLS.",
  pages     = "526--540",
  month     =  may,
  year      =  2013,
  keywords  = "Timing;Encryption;Ciphers;Media Access
               Protocol;TLS;DTLS;CBC-mode encryption;timing attack;plaintext
               recovery"
}

@INPROCEEDINGS{Irazoqui2015-fq,
  title     = "Lucky 13 Strikes Back",
  booktitle = "Proceedings of the 10th {ACM} Symposium on Information, Computer
               and Communications Security",
  author    = "Irazoqui, Gorka and Inci, Mehmet Sinan and Eisenbarth, Thomas
               and Sunar, Berk",
  abstract  = "In this work we show how the Lucky 13 attack can be resurrected
               in the cloud by gaining access to a virtual machine co-located
               with the target. Our version of the attack exploits
               distinguishable cache access times enabled by VM deduplication
               to detect dummy function calls that only happen in case of an
               incorrectly CBC-padded TLS packet. Thereby, we gain back a new
               covert channel not considered in the original paper that enables
               the Lucky 13 attack. In fact, the new side channel is
               significantly more accurate, thus yielding a much more effective
               attack. We briefly survey prominent cryptographic libraries for
               this vulnerability. The attack currently succeeds to compromise
               PolarSSL, GnuTLS and CyaSSL on deduplication enabled platforms
               while the Lucky 13 patches in OpenSSL, Mozilla NSS and MatrixSSL
               are immune to this vulnerability. We conclude that, any program
               that follows secret data dependent execution flow is exploitable
               by side-channel attacks as shown in (but not limited to) our
               version of the Lucky 13 attack.",
  publisher = "Association for Computing Machinery",
  pages     = "85--96",
  series    = "ASIA CCS '15",
  month     =  apr,
  year      =  2015,
  address   = "New York, NY, USA",
  keywords  = "cross-vm attacks, lucky 13 attack, deduplication, virtualization",
  location  = "Singapore, Republic of Singapore"
}

@INPROCEEDINGS{Levillain2015-os,
  title     = "{TLS} Record Protocol: Security Analysis and Defense-in-depth
               Countermeasures for {HTTPS}",
  booktitle = "Proceedings of the 10th {ACM} Symposium on Information, Computer
               and Communications Security",
  author    = "Levillain, Olivier and Gourdin, Baptiste and Debar, Herv{\'e}",
  abstract  = "TLS and its main application HTTPS are an essential part of
               internet security. Since 2011, several attacks against the TLS
               Record protocol have been presented. To remediate these flaws,
               countermeasures have been proposed. They were usually specific
               to a particular attack, and were sometimes in contradiction with
               one another. All the proofs of concept targeted HTTPS and relied
               on the repetition of some secret element inside the TLS tunnel.
               In the HTTPS context, such secrets are pervasive, be they
               authentication cookies or anti-CSRF tokens. We present a
               comprehensive state of the art of attacks on the Record protocol
               and the associated proposed countermeasures. In parallel to the
               efforts of the community to find reliable long term solutions,
               we propose masking mechanisms to avoid the repetition of
               sensitive elements, at the transport or application level. We
               also assess the feasibility and efficiency of such
               defense-in-depth mechanisms. The recent POODLE vulnerability
               confirmed our proposals could thwart unknown attacks, since they
               would have blocked it.",
  publisher = "Association for Computing Machinery",
  pages     = "225--236",
  series    = "ASIA CCS '15",
  month     =  apr,
  year      =  2015,
  address   = "New York, NY, USA",
  location  = "Singapore, Republic of Singapore"
}

@INPROCEEDINGS{Lee2019-xf,
  title     = "Transient Dynamics of Epidemic Spreading and Its Mitigation on
               Large Networks",
  booktitle = "Proceedings of the Twentieth {ACM} International Symposium on
               Mobile Ad Hoc Networking and Computing",
  author    = "Lee, Chul-Ho and Tenneti, Srinivas and Eun, Do Young",
  abstract  = "In this paper, we aim to understand the transient dynamics of a
               susceptible-infected (SI) epidemic spreading process on a large
               network. The SI model has been largely overlooked in the
               literature, while it is naturally a better fit for modeling the
               malware propagation in early times when patches/vaccines are not
               available, or over a wider range of timescales when massive
               patching is practically infeasible. Nonetheless, its analysis is
               simply non-trivial, as its important dynamics are all transient
               and the usual stability/steady-state analysis no longer applies.
               To this end, we develop a theoretical framework that allows us
               to obtain an accurate closed-form approximate solution to the
               original SI dynamics on any arbitrary network, which captures
               the temporal dynamics over all time and is tighter than the
               existing approximation, and also to provide a new interpretation
               via reliability theory. As its applications, we further develop
               vaccination policies with or without knowledge of
               already-infected nodes, to mitigate the future epidemic
               spreading to the extent possible, and demonstrate their
               effectiveness through numerical simulations.",
  publisher = "Association for Computing Machinery",
  pages     = "191--200",
  series    = "Mobihoc '19",
  month     =  jul,
  year      =  2019,
  address   = "New York, NY, USA",
  location  = "Catania, Italy"
}

@ARTICLE{Jani2015-kw,
  title   = "A Critical Review of Scriptless Timing Attacks and Web Browser
             Privacy",
  author  = "Jani, Niravkumar B and Panchal, Bakul B",
  journal = "IJSRD - International Journal for Scientific Research \&
             Development",
  volume  =  3,
  number  =  1,
  pages   = "46--48",
  year    =  2015
}

@ARTICLE{Jamwal2018-tz,
  title   = "Clickjacking Attack: Hijacking User's Click",
  author  = "Jamwal, Kokila; Sharma",
  journal = "International Journal of Advanced Networking and Applications",
  volume  =  10,
  number  =  1,
  pages   = "3735--3740",
  month   =  aug,
  year    =  2018
}

@PHDTHESIS{Billman2018-sq,
  title  = "Cryptojacking: Abusing Computational Power for Profit",
  author = "Billman, Ashley",
  year   =  2018
}

@INPROCEEDINGS{Heiderich2013-qv,
  title     = "{mXSS} attacks: attacking well-secured web-applications by using
               {innerHTML} mutations",
  booktitle = "Proceedings of the 2013 {ACM} {SIGSAC} conference on Computer \&
               communications security",
  author    = "Heiderich, Mario and Schwenk, J{\"o}rg and Frosch, Tilman and
               Magazinius, Jonas and Yang, Edward Z",
  abstract  = "Back in 2007, Hasegawa discovered a novel Cross-Site Scripting
               (XSS) vector based on the mistreatment of the backtick character
               in a single browser implementation. This initially looked like
               an implementation error that could easily be fixed. Instead, as
               this paper shows, it was the first example of a new class of XSS
               vectors, the class of mutation-based XSS (mXSS) vectors, which
               may occur in innerHTML and related properties. mXSS affects all
               three major browser families: IE, Firefox, and Chrome.We were
               able to place stored mXSS vectors in high-profile applications
               like Yahoo! Mail, Rediff Mail, OpenExchange, Zimbra, Roundcube,
               and several commercial products. mXSS vectors bypassed widely
               deployed server-side XSS protection techniques (like HTML
               Purifier, kses, htmlLawed, Blueprint and Google Caja),
               client-side filters (XSS Auditor, IE XSS Filter), Web
               Application Firewall (WAF) systems, as well as Intrusion
               Detection and Intrusion Prevention Systems (IDS/IPS). We
               describe a scenario in which seemingly immune entities are being
               rendered prone to an attack based on the behavior of an involved
               party, in our case the browser. Moreover, it proves very
               difficult to mitigate these attacks: In browser implementations,
               mXSS is closely related to performance enhancements applied to
               the HTML code before rendering; in server side filters, strict
               filter rules would break many web applications since the mXSS
               vectors presented in this paper are harmless when sent to the
               browser.This paper introduces and discusses a set of seven
               different subclasses of mXSS attacks, among which only one was
               previously known. The work evaluates the attack surface,
               showcases examples of vulnerable high-profile applications, and
               provides a set of practicable and low-overhead solutions to
               defend against these kinds of attacks.",
  publisher = "Association for Computing Machinery",
  pages     = "777--788",
  series    = "CCS '13",
  month     =  nov,
  year      =  2013,
  address   = "New York, NY, USA",
  keywords  = "unauthorized access, cross-site scripting, browser security,
               mxss, web security, mutation-based xss, innerhtml",
  location  = "Berlin, Germany"
}

@ARTICLE{Apple_undated-ay,
  title    = "{DOM} Standard",
  author   = "{Apple} and {Google} and {Mozilla} and {Microsoft}",
  journal  = "URL https://dom.spec.whatwg.org/; Accessed 04 November 2021"
}

@ARTICLE{Klein2005-hx,
  title   = "{DOM} based cross site scripting or {XSS} of the third kind",
  author  = "Klein, Amit",
  journal = "Web Application Security Consortium, Articles",
  volume  =  4,
  pages   = "365--372",
  year    =  2005
}

@MISC{Klein2002-du,
  title  = "Cross Site Scripting Explained, Sanctum Security Group",
  author = "Klein, Amit",
  year   =  2002
}

@MISC{noauthor_undated-kz,
  title        = "{OWASP} Top 10:2021",
  booktitle    = "{OWASP}",
  abstract     = "OWASP Top 10:2021",
  howpublished = "\url{https://owasp.org/Top10/}",
  note         = "Accessed: 2021-11-4"
}

@ARTICLE{Kellezi2021-nd,
  title     = "Securing Open Banking with {Model-View-Controller} Architecture
               and {OWASP}",
  author    = "Kellezi, Deina and Boegelund, Christian and Meng, Weizhi",
  abstract  = "In 2015, the European Union passed the PSD2 regulation, with the
               aim of transferring ownership of bank accounts to the private
               person. As a result, Open Banking has become an emerging
               concept, which provides third-party financial service providers
               open access to bank APIs, including consumer banking,
               transaction, and other financial data. However, such openness
               may also incur many security issues, especially when the data
               can be exposed by an API to a third party. Focused on this
               challenge, the primary goal of this work is to develop one
               innovative web solution to the market. We advocate that the
               solution should be able to trigger transactions based on goals
               and actions, allowing users to save up money while encouraging
               positive habits. In particular, we propose a solution with an
               architectural model that ensures clear separation of concern and
               easy integration with Nordea's (the largest bank in the Nordics)
               Open Banking APIs (sandbox version), and a technological stack
               with the microframework Flask, the cloud application platform
               Heroku, and persistent data storage layer using Postgres. We
               analyze and map the web application's security threats and
               determine whether or not the technological frame can provide
               suitable security level, based on the OWASP Top 10 threats and
               threat modelling methodology. The results indicate that many of
               these security measures are either handled automatically by the
               components offered by the technical stack or are easily
               preventable through included packages of the Flask Framework.
               Our findings can support future developers and industries
               working with web applications for Open Banking towards improving
               security by choosing the right frameworks and considering the
               most important vulnerabilities.",
  journal   = "Proc. Int. Wirel. Commun. Mob. Comput. Conf.",
  publisher = "Hindawi",
  volume    =  2021,
  month     =  sep,
  year      =  2021,
  language  = "en"
}

@MISC{noauthor_undated-ta,
  title        = "{OWASP} Foundation",
  abstract     = "About the OWASP Foundation on the main website for The OWASP
                  Foundation. OWASP is a nonprofit foundation that works to
                  improve the security of software.",
  howpublished = "\url{https://owasp.org/about/}",
  note         = "Accessed: 2021-11-4"
}

@MISC{noauthor_undated-gt,
  title        = "{OWASP} Top Ten 2021 - Injection Attacks",
  abstract     = "The OWASP Top 10 is the reference standard for the most
                  critical web application security risks. Adopting the OWASP
                  Top 10 is perhaps the most effective first step towards
                  changing your software development culture focused on
                  producing secure code.",
  howpublished = "\url{https://owasp.org/Top10/A03_2021-Injection/}",
  note         = "Accessed: 2021-11-4"
}

@ARTICLE{Rodriguez2020-bg,
  title    = "Cross-site scripting ({XSS}) attacks and mitigation: A survey",
  author   = "Rodr{\'\i}guez, Germ{\'a}n E and Torres, Jenny G and Flores,
              Pamela and Benavides, Diego E",
  abstract = "The results of the Cisco 2018 Annual Security Report show that
              all analyzed web applications have at least one vulnerability. It
              also shows that web attacks are becoming more frequent, specific
              and sophisticated. According to this report, 40\% of all attack
              attempts lead to a method known as Cross-Site Scripting (XSS),
              which was the most widely used technique. According to the OWASP
              Top 10 - 2017 security risk, this type of attack is ranked No. 7,
              and it is noted that XSS is present in approximately two thirds
              of all web applications. This attack occurs when a malicious user
              uses a web application to execute or send malicious code on
              another user's computer. Also, Cross Site Scripting is a type of
              cyber attack by which vulnerabilities are searched in a web
              application to introduce a harmful script. This implies that user
              information can be affected by stealing cookies, phishing, or
              attacking a company's entire network. In this context, we have
              analyzed a total of 67 documents to collect information of the
              tools and methods that the scientific community has used to
              detect and mitigate these type of attack. It has been
              hypothesized that the trend in the proposal of traditional
              methods to mitigate XSS attacks is greater than the proposals
              that use some artificial intelligence technique. Our results show
              that the trend is increasing in the proposals that analyze the
              content of web pages (13.20\%), as well as those that serve as a
              toolkit for web browsers (16.98\%). Also, we have found that
              there is a low tendency in the use of artificial intelligence
              techniques to detect or mitigate this attack, using Web
              Classifiers (9.43\%).",
  journal  = "Computer Networks",
  volume   =  166,
  pages    = "106960",
  month    =  jan,
  year     =  2020,
  keywords = "XSS; Cookies; DOM-XSS"
}

@ARTICLE{Mrdjenovich2020-vz,
  title     = "Saving the Electronic Person from Digital Assault: The Case for
               More Robust Protections over Our Electronic Medical Records",
  author    = "Mrdjenovich, Danielle M",
  journal   = "Duquesne Law Rev.",
  publisher = "HeinOnline",
  volume    =  58,
  pages     = "146",
  year      =  2020
}

@ARTICLE{Gezer2019-oy,
  title    = "A flow-based approach for Trickbot banking trojan detection",
  author   = "Gezer, Ali and Warner, Gary and Wilson, Clifford and Shrestha,
              Prakash",
  abstract = "Nowadays, online banking is an attractive way of carrying out
              financial operations such as ecommerce, e-banking, and e-payments
              without much effort or the need of any physical presence. This
              increasing popularity in online banking services and payment
              systems has created motivation for financial attackers to steal
              customer`s credentials and money. Banking trojans have been a way
              of committing attacks on these financial institutions for more
              than a decade, and they have become one of the primary drivers of
              botnet traffic. However, the stealthy nature of financial botnets
              requires new techniques and novel systems for detection and
              analysis in order to prevent losses and to ultimately take the
              botnets down. TrickBot, which specifically threatens businesses
              in the financial sector and their customers, has been behind
              man-in-the-browser attacks since 2016. Its main goal is to steal
              online banking information from victims when they visit their
              banking websites. In this study, we utilize machine learning
              techniques to detect TrickBot malware infections and to identify
              TrickBot related traffic flows without having to analyze network
              packet payloads, the IP addresses, port numbers and protocol
              information. Since command and control server IPs are updated
              almost daily, identification of TrickBot related traffic flows
              without looking at specific IP addresses is significant. We adopt
              behavior-based classification that uses artifacts created by the
              malware during the dynamic analysis of TrickBot malware samples.
              We compare the performance results of four different
              state-of-the-art machine learning algorithms, Random Forest,
              Sequential Minimal Optimization, Multilayer Perceptron, and
              Logistic Model to identify TrickBot related flows and detect a
              TrickBot infection. Then, we optimize the proposed classifier via
              exploring the best hyperparameter and feature set selection.
              Looking at network packet identifiers such as packet length,
              packet and flag counts, and inter-arrival times, the Random
              Forest classifier identifies TrickBot related flows with
              99.9534\% accuracy, 91.7\% true positive rate.",
  journal  = "Computers \& Security",
  volume   =  84,
  pages    = "179--192",
  month    =  jul,
  year     =  2019,
  keywords = "Trickbot; Banking trojan; Machine learning; Anomaly traffic
              detection; Dynamic analysis; Random Forest"
}

@ARTICLE{Herman2019-zb,
  title    = "Magecart: The State of a Growing Threat",
  author   = "Herman, J and Klijnsma, Y",
  abstract = "Magecart has become notorious as a form of malware that `skims'
              e-commerce websites. Injected into the site's code, usually on
              payment pages, it captures payment card data and any other
              information entered by shoppers before sending this data to the
              criminals' servers. But in fact, Magecart is more than just
              malware -- it's a sub-culture of cyber criminals who are becoming
              more effective, more widespread and probably a lot richer every
              day.",
  journal  = "Computer Fraud \& Security",
  volume   =  2019,
  number   =  10,
  pages    = "4",
  month    =  oct,
  year     =  2019
}

% The entry below contains non-ASCII chars that could not be converted
% to a LaTeX equivalent.
@BOOK{Lucas2021-at,
  title     = "{TLS} Mastery: Beastie Edition",
  author    = "Lucas, Michael W",
  abstract  = "Transport Layer Security, or TLS, makes ecommerce and online
               banking possible. It protects your passwords and your privacy.
               Let's Encrypt transformed TLS from an expensive tool to a free
               one. TLS understanding and debugging is an essential sysadmin
               skill you must have.TLS Mastery takes you through:· How TLS
               works· What TLS provides, and what it doesn't· Wrapping
               unencrypted connections inside TLS· Assessing TLS
               configurations· The Automated Certificate Management Environment
               (ACME) protocol· Using Let's Encrypt to automatically maintain
               TLS certificates· Online Certificate Status Protocol·
               Certificate Revocation· CAA, HSTS, and Certificate Transparency·
               Why you shouldn't run your own CA, and how to do it anyway· and
               more!Stop wandering blindly around TLS. Master the protocol with
               TLS Mastery!",
  publisher = "Tilted Windmill Press",
  month     =  apr,
  year      =  2021,
  language  = "en"
}

@ARTICLE{Foudil2021-vh,
  title    = "{RFC-DRAFT}: A File Format to Aid in Security Vulnerability
              Disclosure",
  author   = "Foudil, E and Shafranovich, Y",
  journal  = "URL:
              https://datatracker.ietf.org/doc/html/draft-foudil-securitytxt-12;
              Accessed 03 November 2021",
  year     =  2021
}

@ARTICLE{Apple_undated-gj,
  title    = "Cross-origin opener policies",
  author   = "{Apple} and {Google} and {Mozilla} and {Microsoft}",
  journal  = "URL:
              https://html.spec.whatwg.org/multipage/origin.html\#the-headers;
              Accessed 03 November 2021"
}

@ARTICLE{Apple_undated-au,
  title    = "{Cross-Origin-Resource-Policy} Header",
  author   = "{Apple} and {Google} and {Mozilla} and {Microsoft}",
  journal  = "URL
              https://fetch.spec.whatwg.org/\#cross-origin-resource-policy-header;
              Accessed 02 November 2021"
}

@ARTICLE{Apple2006-hk,
  title    = "{CORS} protocol",
  author   = "{Apple} and {Google} and {Mozilla} and {Microsoft}",
  journal  = "URL https://fetch.spec.whatwg.org/\#cors-protocol; Accessed 03
              November 2021",
  year     =  2006
}

@ARTICLE{Ross2013-wm,
  title    = "{RFC7034}: {HTTP} Header Field {X-Frame-Options}",
  author   = "Ross, D and Gondrom, T and Stanley, T",
  abstract = "HTTP Header Field X-Frame-Options (RFC )",
  journal  = "URL: https://datatracker.ietf.org/doc/html/rfc7034; Accessed 3
              November 2021",
  year     =  2013
}

@ARTICLE{Scheitle2018-il,
  title     = "A First Look at Certification Authority Authorization ({CAA})",
  author    = "Scheitle, Quirin and Chung, Taejoong and Hiller, Jens and
               Gasser, Oliver and Naab, Johannes and van Rijswijk-Deij, Roland
               and Hohlfeld, Oliver and Holz, Ralph and Choffnes, Dave and
               Mislove, Alan and Carle, Georg",
  abstract  = "Shaken by severe compromises, the Web's Public Key
               Infrastructure has seen the addition of several security
               mechanisms over recent years. One such mechanism is the
               Certification Authority Authorization (CAA) DNS record, that
               gives domain name holders control over which Certification
               Authorities (CAs) may issue certificates for their domain. First
               defined in RFC 6844, adoption by the CA/B forum mandates that
               CAs validate CAA records as of September 8, 2017. The success of
               CAA hinges on the behavior of three actors: CAs, domain name
               holders, and DNS operators. We empirically study their behavior,
               and observe that CAs exhibit patchy adherence in issuance
               experiments, domain name holders configure CAA records in
               encouraging but error-prone ways, and only six of the 31 largest
               DNS operators enable customers to add CAA records. Furthermore,
               using historic CAA data, we uncover anomalies for already-issued
               certificates. We disseminated our results in the community. This
               has already led to specific improvements at several CAs and
               revocation of mis-issued certificates. Furthermore, in this
               work, we suggest ways to improve the security impact of CAA. To
               foster further improvements and to practice reproducible
               research, we share raw data and analysis tools.",
  journal   = "SIGCOMM Comput. Commun. Rev.",
  publisher = "Association for Computing Machinery",
  volume    =  48,
  number    =  2,
  pages     = "10--23",
  month     =  may,
  year      =  2018,
  address   = "New York, NY, USA",
  keywords  = "HTTPS Security, CAA, Web PKI"
}

@ARTICLE{Apple_undated-hz,
  title    = "{X-Content-Type-Options} Header",
  author   = "{Apple} and {Google} and {Mozilla} and {Microsoft}",
  journal  = "URL
              https://fetch.spec.whatwg.org/\#x-content-type-options-header;
              Accessed 02 November 2021"
}

@ARTICLE{Freed2013-yn,
  title   = "{RFC6838}: Media Type Specifications and Registration Procedures",
  author  = "Freed, Ned and Klensin, J and Hansen, Tony",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc6838; Accessed 02
             November 2021",
  year    =  2013
}

@BOOK{Portela2014-ij,
  title     = "Handbook of Research on Digital Crime, Cyberspace Security, and
               Information Assurance",
  author    = "Portela, Irene and Cruz-Cunha, Maria",
  abstract  = "In our hyper-connected digital world, cybercrime prevails as a
               major threat to online security and safety. New developments in
               digital forensics tools and an understanding of current criminal
               activities can greatly assist in minimizing attacks on
               individuals, organizations, and society as a whole. The Handbook
               of Research on Digital Crime, Cyberspace Security, and
               Information Assurance combines the most recent developments in
               data protection and information communication technology (ICT)
               law with research surrounding current criminal behaviors in the
               digital sphere. Bridging research and practical application,
               this comprehensive reference source is ideally designed for use
               by investigators, computer forensics practitioners, and experts
               in ICT law, as well as academicians in the fields of information
               security and criminal science.",
  publisher = "IGI Global",
  month     =  jul,
  year      =  2014,
  language  = "en"
}

@BOOK{Preston2012-cs,
  title     = "Learn {HTML5} and {JavaScript} for {iOS}",
  author    = "Preston, Scott",
  publisher = "Apress",
  year      =  2012
}

@BOOK{McPeak2007-it,
  title     = "Beginning {JavaScript}",
  author    = "McPeak, Jeremy and Wilton, Paul",
  publisher = "Wiley",
  year      =  2007
}

@ARTICLE{Multiple1996-ju,
  title    = "Same Origin Policy",
  author   = "{Multiple}",
  journal  = "URL
              https://html.spec.whatwg.org/multipage/browsers.html\#cross-origin-objects;
              Accessed 01 November 2021",
  year     =  1996
}

@ARTICLE{West2016-xj,
  title    = "Content security policy level 3; 2016",
  author   = "West, Mike",
  journal  = "URL https://www.w3.org/TR/2016/WD-CSP3-20160126/; Accessed 01
              November 2021",
  year     =  2016
}

@ARTICLE{West2021-hi,
  title    = "Content Security Policy Level 3, 2021",
  author   = "West, Mike",
  journal  = "URL https://www.w3.org/TR/2021/WD-CSP3-20210629/; Accessed 01
              November 2021",
  year     =  2021
}

@ARTICLE{Barth2015-ez,
  title    = "Content Security Policy 1.0, 2015",
  author   = "Barth, Adam and Sterne, Brandon",
  journal  = "URL https://www.w3.org/TR/2015/NOTE-CSP1-20150219/; Accessed 01
              November 2021",
  year     =  2015
}

@ARTICLE{Barth2012-ow,
  title    = "Content Security Policy 1.0, 2012",
  author   = "Barth, Adam and Sterne, Brandon",
  journal  = "URL https://www.w3.org/TR/2012/CR-CSP-20121115/; Accessed 01
              November 2021",
  year     =  2012
}

@ARTICLE{West2014-oe,
  title    = "Content Security Policy Level 2, 2014",
  author   = "West, Mike and Barth, Adam and Veditz, Dan and Sterne, Brandon",
  journal  = "URL https://www.w3.org/TR/2014/WD-CSP2-20140703/; Accessed 01
              November 2021",
  year     =  2014
}

@ARTICLE{West2016-ol,
  title    = "Content Security Policy Level 2, 2016",
  author   = "West, Mike and Barth, Adam and Veditz, Dan and Sterne, Brandon",
  journal  = "URL https://www.w3.org/TR/2016/REC-CSP2-20161215; Accessed 01
              November 2021",
  year     =  2016
}

@ARTICLE{Blake-Wilson2003-qv,
  title   = "{RFC3546}: Transport Layer Security ({TLS}) Extensions",
  author  = "Blake-Wilson, S and Nystrom, M and Hopwood, D and Mikkelsen, J and
             Wright, T",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc3546; Accessed 30
             October 2021",
  year    =  2003
}

@BOOK{Rescorla2001-gg,
  title     = "{SSL} and {TLS}: Designing and Building Secure Systems",
  author    = "Rescorla, Eric",
  abstract  = "``This is the best book on SSL/TLS. Rescorla knows SSL/TLS as
               well as anyone and presents it both clearly and completely....
               At times, I felt like he's been looking over my shoulder when I
               designed SSL v3. If network security matters to you, buy this
               book.'' Paul Kocher, Cryptography Research, Inc. Co-Designer of
               SSL v3 ``Having the right crypto is necessary but not sufficient
               to having secure communications. If you're using SSL/TLS, you
               should have SSL and TLS sitting on your shelf right next to
               Applied Cryptography.'' Bruce Schneier, Counterpane Internet
               Security, Inc. Author of Applied Cryptography ``Everything you
               wanted to know about SSL/TLS in one place. It covers the
               protocols down to the level of packet traces. It covers how to
               write software that uses SSL/TLS. And it contrasts SSL with
               other approaches. All this while being technically sound and
               readable!'' Radia Perlman, Sun Microsystems, Inc. Author of
               Interconnections Secure Sockets Layer (SSL) and its IETF
               successor, Transport Layer Security (TLS), are the leading
               Internet security protocols, providing security for e-commerce,
               web services, and many other network functions. Using SSL/TLS
               effectively requires a firm grasp of its role in network
               communications, its security properties, and its performance
               characteristics. SSL and TLS provides total coverage of the
               protocols from the bits on the wire up to application
               programming. This comprehensive book not only describes how
               SSL/TLS is supposed to behave but also uses the author's free
               ssldump diagnostic tool to show the protocols in action. The
               author covers each protocol feature, first explaining how it
               works and then illustrating it in a live implementation. This
               unique presentation bridges the difficult gap between
               specification and implementation that is a common source of
               confusion and incompatibility. In addition to describing the
               protocols, SSL and TLS delivers the essential details required
               by security architects, application designers, and software
               engineers. Use the practical design rules in this book to
               quickly design fast and secure systems using SSL/TLS. These
               design rules are illustrated with chapters covering the new IETF
               standards for HTTP and SMTP over TLS. Written by an experienced
               SSL implementor, SSL and TLS contains detailed information on
               programming SSL applications. The author discusses the common
               problems faced by implementors and provides complete sample
               programs illustrating the solutions in both C and Java. The
               sample programs use the free OpenSSL and PureTLS toolkits so the
               reader can immediately run the examples. 0201615983B04062001",
  publisher = "Addison-Wesley",
  year      =  2001,
  language  = "en"
}

@INPROCEEDINGS{Wagner1996-fx,
  title     = "Analysis of the {SSL} 3.0 protocol",
  booktitle = "The Second {USENIX} Workshop on Electronic Commerce Proceedings",
  author    = "Wagner, David and Schneier, Bruce",
  volume    =  1,
  pages     = "29--40",
  year      =  1996
}

@BOOK{Ristic2017-aj,
  title     = "Bulletproof {SSL} and {TLS}",
  author    = "Ristic, Ivan",
  publisher = "Feisty Duck",
  month     =  jul,
  year      =  2017,
  language  = "en"
}

@ARTICLE{Rescorla2000-fs,
  title     = "{RFC2818}: {HTTP} Over {TLS}, May 2000",
  author    = "Rescorla, E",
  abstract  = "This memo describes how to use TLS to secure HTTP connections
               over the Internet. Current practice is to layer HTTP over SSL
               (the predecessor to TLS), distinguishing secured traffic from
               insecure traffic by the use of a different server port. This
               document documents that practice using TLS. A companion document
               describes a method for using HTTP/TLS over the same port as
               normal HTTP [RFC2817].",
  journal   = "URL https://datatracker.ietf.org/doc/html/rfc2818; Accessed 24
               October 2021",
  publisher = "RFC Editor",
  year      =  2000,
  address   = "USA"
}

@BOOK{Wu2016-nx,
  title     = "Introduction to Computer Networks and Cybersecurity",
  author    = "Wu, Chwan-Hwa (john) and David Irwin, J",
  abstract  = "If a network is not secure, how valuable is it? Introduction to
               Computer Networks and Cybersecurity takes an integrated approach
               to networking and cybersecurity, highlighting the
               interconnections so that you quickly understand the complex
               design issues in modern networks. This full-color book uses a
               wealth of examples and illustrations to effective",
  publisher = "CRC Press",
  month     =  apr,
  year      =  2016,
  language  = "en"
}

@ARTICLE{Farrell2010-kv,
  title    = "Why didn't we spot that? [Practical Security]",
  author   = "Farrell, Stephen",
  abstract = "The Secure Sockets Layer (SSL) protocol and its standards-track
              successor, the Transport Layer Security (TLS) protocol, were
              developed more than a decade ago and have generally withstood
              scrutiny in that the protocols themselves haven't been found to
              have security flaws. Marsh Ray and Steve Dispensa discovered a
              design flaw in the TLS protocol that affects all versions of the
              protocol up to and including the current version.Whereas the
              vulnerability itself is serious, it need not affect many
              deployments once administrators apply suitable patches to disable
              renegotiation, leaving TLS sufficiently secure in most cases
              because exploiting the vulnerability requires the attacker to be
              an active man-in-themiddle, redirecting traffic between victims
              (for example, a browser and a Web server). However, because
              security problems only ever get worse, a change to the protocol
              is required. The vulnerability is an interesting attack in
              itself, but perhaps more interesting is the question, why didn't
              we see this earlier? In this article, the author explore this
              question but, unfortunately, can't answer it. Hopefully, simply
              asking the question might prompt developers to re-examine
              assumptions they've forgotten they've even made.",
  journal  = "IEEE Internet Computing",
  volume   =  14,
  number   =  1,
  pages    = "85",
  month    =  jan,
  year     =  2010,
  keywords = "Security;Transport protocols;Sockets;Web
              server;man-in-the-middle;TLS;SSL;security protocol
              development;practical security"
}

@ARTICLE{Rescorla2018-wb,
  title   = "{RFC8446}: The Transport Layer Security ({TLS}) Protocol Version
             1.3, August 2018",
  author  = "Rescorla, Eric",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc8446; Accessed 24
             October 2021",
  year    =  2018
}

@ARTICLE{Dierks2008-uy,
  title   = "{RFC5246}: The Transport Layer Security ({TLS}) Protocol Version
             1.2, August 2008",
  author  = "Dierks, Tim and Rescorla, Eric",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc5246; Accessed 24
             October 2021",
  year    =  2008
}

% The entry below contains non-ASCII chars that could not be converted
% to a LaTeX equivalent.
@ARTICLE{Dierks2006-wu,
  title     = "{RFC4346}: The Transport Layer Security ({TLS}) Protocol Version
               1.1, April 2006",
  author    = "Dierks, T and Rescorla, E",
  journal   = "URL https://datatracker.ietf.org/doc/html/rfc4346; Accessed 24
               October 2021",
  publisher = "Available online (accessed 10 October, 2007): http://www. ietf.
               org/rfc …",
  year      =  2006
}

@ARTICLE{Dierks1999-fn,
  title     = "{RFC2246}: The {TLS} Protocol Version 1.0, January 1999",
  author    = "Dierks, T and Allen, C",
  abstract  = "This document specifies Version 1.0 of the Transport Layer
               Security (TLS) protocol. The TLS protocol provides
               communications privacy over the Internet. The protocol allows
               client/server applications to communicate in a way that is
               designed to prevent eavesdropping, tampering, or message
               forgery.",
  journal   = "URL https://datatracker.ietf.org/doc/html/rfc2246; Accessed 24
               October 2021",
  publisher = "IETF",
  year      =  1999
}

@ARTICLE{Freier2011-pt,
  title   = "{RFC6101}: The Secure Sockets Layer ({SSL}) Protocol Version 3.0,
             November 1996",
  author  = "Freier, Alan and Karlton, Philip and Kocher, Paul",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc6101; Accessed 24
             October 2021",
  year    =  2011
}

@BOOK{Oppliger2016-ig,
  title     = "{SSL} and {TLS}: Theory and Practice, Second Edition",
  author    = "Oppliger, Rolf",
  abstract  = "This completely revised and expanded second edition of SSL and
               TLS: Theory and Practice provides an overview and a
               comprehensive discussion of the Secure Sockets Layer (SSL),
               Transport Layer Security (TLS), and Datagram TLS (DTLS)
               protocols that are omnipresent in today's e-commerce and
               e-business applications and respective security solutions. It
               provides complete details on the theory and practice of the
               protocols, offering readers a solid understanding of their
               design principles and modes of operation. Updates to this
               edition include coverage of the recent attacks against the
               protocols, newly specified extensions and firewall traversal, as
               well as recent developments related to public key certificates
               and respective infrastructures. This book targets software
               developers, security professionals, consultants, protocol
               designers, and chief security officers who will gain insight and
               perspective on the many details of the SSL, TLS, and DTLS
               protocols, such as cipher suites, certificate management, and
               alert messages. The book also comprehensively discusses the
               advantages and disadvantages of the protocols compared to other
               Internet security protocols and provides the details necessary
               to correctly implement the protocols while saving time on the
               security practitioner's side.",
  publisher = "Artech House",
  month     =  mar,
  year      =  2016,
  language  = "en"
}

@ARTICLE{Berners-Lee1995-hg,
  title   = "{RFC} 1866: Hypertext Markup Language - 2.0, August 1995",
  author  = "Berners-Lee, Tim and Connolly, D",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc1866; Accessed 24
             October 2021",
  year    =  1995
}

@ARTICLE{Berners-Lee1996-ji,
  title   = "{RFC1945}: Hypertext Transfer Protocol - {HTTP/1.0}, May 1996",
  author  = "Berners-Lee, Tim and Fielding, Roy and Frystyk, H",
  journal = "URL https://datatracker.ietf.org/doc/html/rfc1945; Accessed 24
             October 2021",
  year    =  1996
}

@INPROCEEDINGS{Chen2016-dl,
  title     = "Longitudinal Study of the Use of Client-side Security Mechanisms
               on the European Web",
  booktitle = "Proceedings of the 25th International Conference Companion on
               World Wide Web",
  author    = "Chen, Ping and Desmet, Lieven and Huygens, Christophe and
               Joosen, Wouter",
  abstract  = "As the web rapidly expands and gets integrated into all kinds of
               business, browsing the web has become an important part of
               people's daily lives. With the rising importance of various web
               applications sit in a browser, attackers also shifted their
               focus towards client-side attacks. To defend against these
               attacks, numerous client-side security mechanisms for the
               browser are proposed. The presence of these mechanisms on a
               website can be used as an indicator of the security awareness
               and practices of that website.In this paper, through a
               large-scale analysis of more than 18,000 European websites over
               two years, we analyze the longitudinal trends of the adoption of
               client-side security mechanisms. We validate that the most
               popular websites were adopting new security features quicker
               that less popular websites in the two year timeframe. By
               examining the websites based on their business vertical, we
               observe that the websites in the Finance and Education category
               are outperforming other verticals in the data set, with respect
               to the usage of client-side security mechanisms.",
  publisher = "International World Wide Web Conferences Steering Committee",
  pages     = "457--462",
  series    = "WWW '16 Companion",
  month     =  apr,
  year      =  2016,
  address   = "Republic and Canton of Geneva, CHE",
  keywords  = "european web, empirical research, client-side security",
  location  = "Montr{\'e}al, Qu{\'e}bec, Canada"
}

@ARTICLE{Calzavara2018-xv,
  title     = "{Semantics-Based} Analysis of Content Security Policy Deployment",
  author    = "Calzavara, Stefano and Rabitti, Alvise and Bugliesi, Michele",
  abstract  = "Content Security Policy (CSP) is a recent W3C standard
               introduced to prevent and mitigate the impact of content
               injection vulnerabilities on websites. In this article, we
               introduce a formal semantics for the latest stable version of
               the standard, CSP Level 2. We then perform a systematic,
               large-scale analysis of the effectiveness of the current CSP
               deployment, using the formal semantics to substantiate our
               methodology and to assess the impact of the detected issues. We
               focus on four key aspects that affect the effectiveness of CSP:
               browser support, website adoption, correct configuration, and
               constant maintenance. Our analysis shows that browser support
               for CSP is largely satisfactory, with the exception of a few
               notable issues. However, there are several shortcomings relative
               to the other three aspects. CSP appears to have a rather limited
               deployment as yet and, more crucially, existing policies exhibit
               a number of weaknesses and misconfiguration errors. Moreover,
               content security policies are not regularly updated to ban
               insecure practices and remove unintended security violations. We
               argue that many of these problems can be fixed by better
               exploiting the monitoring facilities of CSP, while other issues
               deserve additional research, being more rooted into the CSP
               design.",
  journal   = "ACM Trans. Web",
  publisher = "Association for Computing Machinery",
  volume    =  12,
  number    =  2,
  pages     = "1--36",
  month     =  jan,
  year      =  2018,
  address   = "New York, NY, USA",
  keywords  = "web security, formal methods, Content security policy"
}

@ARTICLE{Jia_undated-eh,
  title  = "Poster: Security Analysis of {HSTS} Implementation in Browsers",
  author = "Jia, Yan and Zhang, Yuqing"
}

@INPROCEEDINGS{Amann2017-co,
  title     = "Mission accomplished? {HTTPS} security after diginotar",
  booktitle = "Proceedings of the 2017 Internet Measurement Conference",
  author    = "Amann, Johanna and Gasser, Oliver and Scheitle, Quirin and
               Brent, Lexi and Carle, Georg and Holz, Ralph",
  abstract  = "Driven by CA compromises and the risk of man-in-the-middle
               attacks, new security features have been added to TLS, HTTPS,
               and the web PKI over the past five years. These include
               Certificate Transparency (CT), for making the CA system
               auditable; HSTS and HPKP headers, to harden the HTTPS posture of
               a domain; the DNS-based extensions CAA and TLSA, for control
               over certificate issuance and pinning; and SCSV, for protocol
               downgrade protection.This paper presents the first large scale
               investigation of these improvements to the HTTPS ecosystem,
               explicitly accounting for their combined usage. In addition to
               collecting passive measurements at the Internet uplinks of large
               University networks on three continents, we perform the largest
               domain-based active Internet scan to date, covering 193M
               domains. Furthermore, we track the long-term deployment history
               of new TLS security features by leveraging passive observations
               dating back to 2012.We find that while deployment of new
               security features has picked up in general, only SCSV (49M
               domains) and CT (7M domains) have gained enough momentum to
               improve the overall security of HTTPS. Features with higher
               complexity, such as HPKP, are deployed scarcely and often
               incorrectly. Our empirical findings are placed in the context of
               risk, deployment effort, and benefit of these new technologies,
               and actionable steps for improvement are proposed. We
               cross-correlate use of features and find some techniques with
               significant correlation in deployment. We support reproducible
               research and publicly release data and code.",
  publisher = "Association for Computing Machinery",
  pages     = "325--340",
  series    = "IMC '17",
  month     =  nov,
  year      =  2017,
  address   = "New York, NY, USA",
  keywords  = "CAA, PKI, HSTS, HTTPS, HPKP, TLS, SCSV, X.509, CT",
  location  = "London, United Kingdom"
}

@ARTICLE{Hodges2012-pe,
  title     = "{RFC6797}: {HTTP} Strict Transport Security ({HSTS)}, November
               2012",
  author    = "Hodges, J and Jackson, C and Bart, A",
  journal   = "URL https://datatracker.ietf.org/doc/html/rfc6797; Accessed 24
               October 2021",
  publisher = "IETF",
  number    = "rfc6797",
  year      =  2012,
  address   = "IETF Administration LLC c/o IETF Secretariat Association
               Management Solutions 5177 Brandin Ct Fremont, CA 94538 USA"
}


@ARTICLE{Evans2018-mi,
  title    = "{RFC7469}: Public Key Pinning Extension for {HTTP}",
  author   = "Evans, C and {Palmer, C: Sleevi, R}",
  journal  = "URL: https://datatracker.ietf.org/doc/html/rfc7469, Accessed 28
              November 2021",
  year     =  2018
}


@PHDTHESIS{Chen2018-ft,
  title    = "Empirical study on the use of client-side web security mechanisms",
  author   = "Chen, P",
  editor   = "{dr. ir. W. Joosen dr. ir. L. Desmet}",
  abstract = "Nowadays, no one disputes the fact that the web has become an
              essential part of our society. More and more organizations and
              individuals are relying on the web for almost all kinds of
              activities. Naturally, the rising importance of the web attracts
              an increasing number of web attacks. As the web (and the attacks)
              keep on expanding, it is important for website operators to
              ensure the security of their web applications. To defend against
              a rising number of web attacks, one basic yet important step is
              to adopt various known defense mechanisms that have been
              developed by the security community. In this dissertation, we
              assess the security of websites from the adoption perspective of
              these client-side defense mechanisms. Client-side security
              mechanisms are configured and controled by web servers, and they
              help websites to reduce their client-side attack surface. As
              such, the presence of these mechanisms on a website might be used
              as an external indicator of the security awareness and practices
              of the website owner. Firstly, we discuss the eight
              most-important client-side defense mechanisms that are used as
              metrics to design a web scoring system to measure the security of
              web applications. Secondly, we propose an efficient crawling
              approach for large-scale web assessments to measure the adoption
              of these mechanisms. We then use this crawling approach to
              investigate mixed-content inclusion weaknesses, to conduct a
              security assessment for the Chinese Web, and to perform a
              longitudinal assessment on the adoption of client-side security
              mechanisms on the European Web. By quantifying a website's
              security level as a web security score, we can compare the
              security maturity of websites per country, sector and popularity.
              Lastly, we explore the relationship between a company's
              cybercrime cost and the adoption of defense mechanisms on its
              website. Our correlational analysis shows that companies with
              better security defense tend to have less business loss caused by
              web attacks.",
  month    =  sep,
  year     =  2018,
  school   = "ARENBERG DOCTORAL SCHOOL",
  keywords = "web security; client-side security mechanism; security
              measurement; cybercrime cost",
  language = "en"
}


@ARTICLE{Chuat2021-nf,
  title         = "{F-PKI}: Enabling Innovation and Trust Flexibility in the
                   {HTTPS} {Public-Key} Infrastructure",
  author        = "Chuat, Laurent and Kr{\"a}henb{\"u}hl, Cyrill and Mittal,
                   Prateek and Perrig, Adrian",
  abstract      = "We present F-PKI, an enhancement to the HTTPS public-key
                   infrastructure that gives trust flexibility to both clients
                   and domain owners while giving certification authorities
                   (CAs) means to enforce stronger security measures. In
                   today's web PKI, all CAs are equally trusted, and security
                   is defined by the weakest link. We address this problem by
                   introducing trust flexibility in two dimensions: with F-PKI,
                   each domain owner can define a domain policy (specifying,
                   for example, which CAs are authorized to issue certificates
                   for their domain name) and each client can set or choose a
                   validation policy based on trust levels. F-PKI thus supports
                   a property that is sorely needed in today's Internet: trust
                   heterogeneity. Different parties can express different trust
                   preferences while still being able to verify all
                   certificates. In contrast, today's web PKI only allows
                   clients to fully distrust suspicious/misbehaving CAs, which
                   is likely to cause collateral damage in the form of
                   legitimate certificates being rejected. Our contribution is
                   to present a system that is backward compatible, provides
                   sensible security properties to both clients and domain
                   owners, ensures the verifiability of all certificates, and
                   prevents downgrade attacks. Furthermore, F-PKI provides a
                   ground for innovation, as it gives CAs an incentive to
                   deploy new security measures to attract more customers,
                   without having these measures undercut by vulnerable CAs.",
  month         =  aug,
  year          =  2021,
  archivePrefix = "arXiv",
  primaryClass  = "cs.CR",
  eprint        = "2108.08581"
}


@INPROCEEDINGS{Durumeric2014-yj,
  title     = "The Matter of Heartbleed",
  booktitle = "Proceedings of the 2014 Conference on Internet Measurement
               Conference",
  author    = "Durumeric, Zakir and Li, Frank and Kasten, James and Amann,
               Johanna and Beekman, Jethro and Payer, Mathias and Weaver,
               Nicolas and Adrian, David and Paxson, Vern and Bailey, Michael
               and Halderman, J Alex",
  abstract  = "The Heartbleed vulnerability took the Internet by surprise in
               April 2014. The vulnerability, one of the most consequential
               since the advent of the commercial Internet, allowed attackers
               to remotely read protected memory from an estimated 24--55\% of
               popular HTTPS sites. In this work, we perform a comprehensive,
               measurement-based analysis of the vulnerability's impact,
               including (1) tracking the vulnerable population, (2) monitoring
               patching behavior over time, (3) assessing the impact on the
               HTTPS certificate ecosystem, and (4) exposing real attacks that
               attempted to exploit the bug. Furthermore, we conduct a
               large-scale vulnerability notification experiment involving
               150,000 hosts and observe a nearly 50\% increase in patching by
               notified hosts. Drawing upon these analyses, we discuss what
               went well and what went poorly, in an effort to understand how
               the technical community can respond more effectively to such
               events in the future.",
  publisher = "Association for Computing Machinery",
  pages     = "475--488",
  series    = "IMC '14",
  month     =  nov,
  year      =  2014,
  address   = "New York, NY, USA",
  keywords  = "security, heartbleed, openssl, internet-wide scanning",
  location  = "Vancouver, BC, Canada"
}

@ARTICLE{Partridge2016-ph,
  title     = "Ethical considerations in network measurement papers",
  author    = "Partridge, Craig and Allman, Mark",
  abstract  = "The most important consideration is how the collection of
               measurements may affect a person's well-being.",
  journal   = "Commun. ACM",
  publisher = "Association for Computing Machinery",
  volume    =  59,
  number    =  10,
  pages     = "58--64",
  month     =  sep,
  year      =  2016,
  address   = "New York, NY, USA"
}


@INPROCEEDINGS{Durumeric2015-zq,
  title     = "A Search Engine Backed by {Internet-Wide} Scanning",
  booktitle = "Proceedings of the 22nd {ACM} {SIGSAC} Conference on Computer
               and Communications Security",
  author    = "Durumeric, Zakir and Adrian, David and Mirian, Ariana and
               Bailey, Michael and Halderman, J Alex",
  abstract  = "Fast Internet-wide scanning has opened new avenues for security
               research, ranging from uncovering widespread vulnerabilities in
               random number generators to tracking the evolving impact of
               Heartbleed. However, this technique still requires significant
               effort: even simple questions, such as, ``What models of
               embedded devices prefer CBC ciphers?'', require developing an
               application scanner, manually identifying and tagging devices,
               negotiating with network administrators, and responding to abuse
               complaints. In this paper, we introduce Censys, a public search
               engine and data processing facility backed by data collected
               from ongoing Internet-wide scans. Designed to help researchers
               answer security-related questions, Censys supports full-text
               searches on protocol banners and querying a wide range of
               derived fields (e.g., 443.https.cipher). It can identify
               specific vulnerable devices and networks and generate
               statistical reports on broad usage patterns and trends. Censys
               returns these results in sub-second time, dramatically reducing
               the effort of understanding the hosts that comprise the
               Internet. We present the search engine architecture and
               experimentally evaluate its performance. We also explore
               Censys's applications and show how questions asked in recent
               studies become simple to answer.",
  publisher = "Association for Computing Machinery",
  pages     = "542--553",
  series    = "CCS '15",
  month     =  oct,
  year      =  2015,
  address   = "New York, NY, USA",
  keywords  = "internet-wide scanning",
  location  = "Denver, Colorado, USA"
}


@MISC{noauthor_undated-fh,
  title        = "CISA: Report Incidents, Phishing, Malware, or Vulnerabilities",
  abstract     = "CISA provides secure means for constituents and partners to
                  report incidents, phishing attempts, malware, and
                  vulnerabilities. To submit a report, please select the
                  appropriate method from below: Incident Reporting Form:
                  report incidents as defined by NIST Special Publication
                  800-61 Rev 2, to include",
  howpublished = "\url{https://us-cert.cisa.gov/report}",
  note         = "Accessed: 2021-12-1"
}



% The entry below contains non-ASCII chars that could not be converted
% to a LaTeX equivalent.
@MISC{noauthor_undated-kp,
  title        = "http: {http2pipe.closeWithErrorCrashed} · Issue \#43965 ·
                  golang/go",
  howpublished = "\url{https://github.com/golang/go/issues/43965}",
  note         = "Accessed: 2021-12-9"
}

@INPROCEEDINGS{Tekiner2021-sq,
  title     = "{In-Browser} Cryptomining for Good: An Untold Story",
  booktitle = "2021 {IEEE} International Conference on Decentralized
               Applications and Infrastructures ({DAPPS})",
  author    = "Tekiner, Ege and Acar, Abbas and Uluagac, A Selcuk and Kirda,
               Engin and Selcuk, Ali Aydin",
  abstract  = "In-browser cryptomining uses the computational power of a
               website's visitors to mine cryptocurrency, i.e., to create new
               coins. With the rise of ready-to-use mining scripts distributed
               by service providers (e.g., Coinhive), it has become trivial to
               turn a website into a cryptominer by copying and pasting the
               mining script. Both legitimate webpage owners who want to raise
               an extra revenue under users' explicit consent and malicious
               actors who wish to exploit the computational power of the users'
               computers without their consent have started to utilize this
               emerging paradigm of cryptocurrency operations. In-browser
               cryptomining, though mostly abused by malicious actors in
               practice, is indeed a promising funding model that can be
               utilized by website owners, publishers, or non-profit
               organizations for legitimate business purposes, such as to
               collect revenue or donations for humanitarian projects, inter
               alia. However, our analysis in this paper shows that in
               practice, regardless of their being legitimate or not, all
               in-browser mining scripts are treated the same as malicious
               cryptomining samples (aka cryptojacking) and blacklisted by
               browser extensions or antivirus programs. Indeed, there is a
               need for a better understanding of the in-browser cryptomining
               ecosystem. Hence, in this paper, we present an in-depth
               empirical analysis of in-browser cryptomining processes,
               focusing on the samples explicitly asking for user consent,
               which we call permissioned cryptomining. To the best of our
               knowledge, this is the first study focusing on the permissioned
               cryptomining samples. For this, we created a dataset of 6269
               unique web sites containing cryptomining scripts in their source
               codes to characterize the in-browser cryptomining ecosystem by
               differentiating permissioned and permissionless cryptomining
               samples. We believe that (1) this paper is the first attempt
               showing that permissioned in-browser cryptomining could be a
               legitimate and viable monetization tool if implemented
               responsibly and without interrupting the user, and (2) this
               paper will catalyze the widespread adoption of legitimate
               crvptominina with user consent and awareness.",
  pages     = "20--29",
  month     =  aug,
  year      =  2021,
  keywords  = "Codes;Conferences;Ecosystems;Focusing;Organizations;Tools;Cryptocurrency;Cryptojacking;cryptomining;cryptocurrency;bit-coin;monero;coinhive"
}


@ARTICLE{Tala_Security2020-ee,
  title   = "Global Data At Risk State of the Web Report",
  author  = "{Tala Security}",
  journal = "https://go.talasecurity.io/hubfs/Content/White\%20Papers\%20and\%20Reports/\_Global\%20Data\%20at\%20Risk\_2020\%20State\%20of\%20the\%20Web\%20Report\_.pdf",
  month   =  jul,
  year    =  2020,
  note    = "Accessed: 2021-12-15"
}


@MISC{noauthor_undated-oz,
  title        = "Serve websites over {HTTPS} (always)",
  abstract     = "You should be serving web pages over HTTPS. Are you?",
  howpublished = "\url{https://www.ncsc.gov.uk/blog-post/serve-websites-over-https-always}",
  note         = "Accessed: 2021-12-16",
  language     = "en"
}


@MISC{noauthor_undated-xk,
  title        = "Does my site need {HTTPS}?",
  booktitle    = "Caddy",
  abstract     = "Find out if your site needs HTTPS.",
  howpublished = "\url{https://doesmysiteneedhttps.com/}",
  note         = "Accessed: 2021-12-16",
  language     = "en"
}

@INPROCEEDINGS{Clark2013-sh,
  title     = "{SoK}: {SSL} and {HTTPS}: Revisiting Past Challenges and
               Evaluating Certificate Trust Model Enhancements",
  booktitle = "2013 {IEEE} Symposium on Security and Privacy",
  author    = "Clark, Jeremy and van Oorschot, Paul C",
  abstract  = "Internet users today depend daily on HTTPS for secure
               communication with sites they intend to visit. Over the years,
               many attacks on HTTPS and the certificate trust model it uses
               have been hypothesized, executed, and/or evolved. Meanwhile the
               number of browser-trusted (and thus, de facto, user-trusted)
               certificate authorities has proliferated, while the due
               diligence in baseline certificate issuance has declined. We
               survey and categorize prominent security issues with HTTPS and
               provide a systematic treatment of the history and on-going
               challenges, intending to provide context for future directions.
               We also provide a comparative evaluation of current proposals
               for enhancing the certificate infrastructure used in practice.",
  pages     = "511--525",
  month     =  may,
  year      =  2013,
  keywords  = "
               Browsers;Protocols;Servers;Cryptography;Organizations;Software;SSL;certificates;browser
               trust model;usability"
}


@INPROCEEDINGS{Holz2011-yv,
  title     = "The {SSL} landscape: a thorough analysis of the x.509 {PKI}
               using active and passive measurements",
  booktitle = "Proceedings of the 2011 {ACM} {SIGCOMM} conference on Internet
               measurement conference",
  author    = "Holz, Ralph and Braun, Lothar and Kammenhuber, Nils and Carle,
               Georg",
  abstract  = "The SSL and TLS infrastructure used in important protocols like
               HTTPs and IMAPs is built on an X.509 public-key infrastructure
               (PKI). X.509 certificates are thus used to authenticate services
               like online banking, shopping, e-mail, etc. However, it always
               has been felt that the certification processes of this PKI may
               lack in stringency, resulting in a deployment where many
               certificates do not meet the requirements of a secure PKI.This
               paper presents a comprehensive analysis of X.509 certificates in
               the wild. To shed more light on the state of the deployed and
               actually used X.509 PKI, we obtained and evaluated data from
               many different sources. We conducted HTTPs scans of a large
               number of popular HTTPs servers over a 1.5-year time span,
               including scans from nine locations distributed over the globe.
               To compare certification properties of highly ranked hosts with
               the global picture, we included a third-party scan of the entire
               IPv4 space in our analyses. Furthermore, we monitored live
               SSL/TLS traffic on a 10Gbps uplink of a large research network.
               This allows us to compare the properties of the deployed PKI
               with the part of the PKI that is being actively accessed by
               users.Our analysis reveals that the quality of certification
               lacks in stringency, due to a number of reasons among which
               incorrect certification chains or invalid certificate subjects
               give the most cause for concern. Similar concerns can be raised
               for the properties of certification chains and many self-signed
               certificates used in the deployed X.509 PKI. Our findings
               confirm what has long been believed -- namely that the X.509 PKI
               we often use in our everyday's lives is in a sorry state.",
  publisher = "Association for Computing Machinery",
  pages     = "427--444",
  series    = "IMC '11",
  month     =  nov,
  year      =  2011,
  address   = "New York, NY, USA",
  keywords  = "TLS, public key infrastructure, SSL, HTTPS, certificates, X.509",
  location  = "Berlin, Germany"
}


@BOOK{Martin2017-sx,
  title     = "Everyday Cryptography: Fundamental Principles and Applications",
  author    = "Martin, Keith M",
  abstract  = "Cryptography is a vital technology that underpins the security
               of information in computer networks. This book presents a
               comprehensive introduction to the role that cryptography plays
               in providing information security for everyday technologies such
               as the Internet, mobile phones, Wi-Finetworks, payment cards,
               Tor, and Bitcoin. This book is intended to be introductory,
               self-contained, and widely accessible. It is suitable as a first
               read on cryptography. Almost no prior knowledge of mathematics
               is required since the book deliberately avoids the details of
               the mathematics techniques underpinning cryptographic
               mechanisms.Instead our focus will be on what a normal user or
               practitioner of information security needs to know about
               cryptography in order to understand the design and use of
               everyday cryptographic applications. By focusing on the
               fundamental principles of modern cryptography rather than the
               technical details of current cryptographic technology, the main
               part this book is relatively timeless, and illustrates the
               application of these principles by considering a number of
               contemporary applications ofcryptography. Following the
               revelations of former NSA contractor Edward Snowden, the book
               considers the wider societal impact of use of cryptography and
               strategies for addressing this. A reader of this book will not
               only be able to understand the everyday use of cryptography, but
               also be able to interpret future developments in this
               fascinating and crucially important area of technology.",
  publisher = "Oxford University Press",
  year      =  2017,
  language  = "en"
}

@MISC{noauthor_undated-bi,
  title        = "Preparing to issue 200 million certificates in 24 hours",
  abstract     = "On a normal day Let's Encrypt issues nearly two million
                  certificates. When we think about what essential
                  infrastructure for the Internet needs to be prepared for
                  though, we're not thinking about normal days. We want to be
                  prepared to respond as best we can to the most difficult
                  situations that might arise. In some of the worst scenarios,
                  we might want to re-issue all of our certificates in a 24
                  hour period in order to avoid widespread disruptions.",
  howpublished = "\url{https://letsencrypt.org/2021/02/10/200m-certs-24hrs.html}",
  note         = "Accessed: 2021-12-22",
  language     = "en"
}

@MISC{noauthor_undated-im,
  title        = "{HTTPS} as a ranking signal",
  howpublished = "\url{https://developers.google.com/search/blog/2014/08/https-as-ranking-signal}",
  note         = "Accessed: 2021-12-22"
}

@MISC{Vyas2017-ds,
  title        = "Communicating the dangers of non-secure {HTTP}",
  booktitle    = "Mozilla Security Blog",
  author       = "Vyas, Tanvi",
  abstract     = "HTTPS, the secure variant of the HTTP protocol, has long been
                  a staple of the modern Web. It creates secure connections by
                  providing authentication and encryption between a browser and
                  ...",
  month        =  jan,
  year         =  2017,
  howpublished = "\url{https://blog.mozilla.org/security/2017/01/20/communicating-the-dangers-of-non-secure-http/}",
  note         = "Accessed: 2021-12-22",
  language     = "en"
}

@MISC{Google_undated-ws,
  title        = "Moving towards a more secure web",
  author       = "{Google}",
  abstract     = "Posted by Emily Schechter, Chrome Security Team [Updated on
                  12/5/16 with instructions for developers] Developers : Read
                  more about how to ...",
  howpublished = "\url{https://security.googleblog.com/2016/09/moving-towards-more-secure-web.html}",
  note         = "Accessed: 2021-12-22"
}

@MISC{noauthor_undated-po,
  title        = "Matplotlib --- Visualization with Python",
  howpublished = "\url{https://matplotlib.org/}",
  note         = "Accessed: 2022-1-23"
}

@MISC{noauthor_undated-xf,
  title       = "Remove plugin-types",
  abstract    = "This change removes the plugin-types directive and related
                 algorithms. Cf. \#394 for background Preview | Diff",
  institution = "Github",
  language    = "en",
  note         = "Accessed: 2022-01-29"
}

@INPROCEEDINGS{Weissbacher2014-vm,
  title     = "Why Is {CSP} Failing? Trends and Challenges in {CSP} Adoption",
  booktitle = "Research in Attacks, Intrusions and Defenses",
  author    = "Weissbacher, Michael and Lauinger, Tobias and Robertson, William",
  abstract  = "Content Security Policy (CSP) has been proposed as a principled
               and robust browser security mechanism against content injection
               attacks such as XSS. When configured correctly, CSP renders
               malicious code injection and data exfiltration exceedingly
               difficult for attackers. However, despite the promise of these
               security benefits and being implemented in almost all major
               browsers, CSP adoption is minuscule---our measurements show that
               CSP is deployed in enforcement mode on only 1\% of the Alexa Top
               100.",
  publisher = "Springer International Publishing",
  pages     = "212--233",
  year      =  2014
}

@MISC{Google_undated-ct,
  title        = "Rich Notifications in Chrome",
  booktitle    = "Chromium Blog",
  author       = "{Google}",
  abstract     = "News and developments from the open source browser project",
  howpublished = "\url{https://blog.chromium.org/2013/05/}",
  note         = "Accessed: 2022-2-1",
  language     = "en"
}

@INPROCEEDINGS{Kocher2019-gv,
  title     = "Spectre Attacks: Exploiting Speculative Execution",
  booktitle = "2019 {IEEE} Symposium on Security and Privacy ({SP})",
  author    = "Kocher, Paul and Horn, Jann and Fogh, Anders and Genkin, Daniel
               and Gruss, Daniel and Haas, Werner and Hamburg, Mike and Lipp,
               Moritz and Mangard, Stefan and Prescher, Thomas and Schwarz,
               Michael and Yarom, Yuval",
  abstract  = "Modern processors use branch prediction and speculative
               execution to maximize performance. For example, if the
               destination of a branch depends on a memory value that is in the
               process of being read, CPUs will try to guess the destination
               and attempt to execute ahead. When the memory value finally
               arrives, the CPU either discards or commits the speculative
               computation. Speculative logic is unfaithful in how it executes,
               can access the victim's memory and registers, and can perform
               operations with measurable side effects. Spectre attacks involve
               inducing a victim to speculatively perform operations that would
               not occur during correct program execution and which leak the
               victim's confidential information via a side channel to the
               adversary. This paper describes practical attacks that combine
               methodology from side channel attacks, fault attacks, and
               return-oriented programming that can read arbitrary memory from
               the victim's process. More broadly, the paper shows that
               speculative execution implementations violate the security
               assumptions underpinning numerous software security mechanisms,
               including operating system process separation, containerization,
               just-in-time (JIT) compilation, and countermeasures to cache
               timing and side-channel attacks. These attacks represent a
               serious threat to actual systems since vulnerable speculative
               execution capabilities are found in microprocessors from Intel,
               AMD, and ARM that are used in billions of devices. While
               makeshift processor-specific countermeasures are possible in
               some cases, sound solutions will require fixes to processor
               designs as well as updates to instruction set architectures
               (ISAs) to give hardware architects and software developers a
               common understanding as to what computation state CPU
               implementations are (and are not) permitted to leak.",
  pages     = "1--19",
  month     =  may,
  year      =  2019,
  keywords  = "Program processors;Microarchitecture;Registers;Arrays;Transient
               analysis;Hardware;Side-channel
               attacks;Spectre;speculative-execution;microarchitecture-security;microarchitectural-attack"
}

@MISC{noauthor_undated-cr,
  title        = "Cross-origin embedder policy",
  howpublished = "\url{https://wicg.github.io/cross-origin-embedder-policy/}",
  note         = "Accessed: 2022-2-7",
  language     = "en"
}

@MISC{Langley_undated-dm,
  title        = "Strict Transport Security",
  author       = "Langley, Adam",
  howpublished = "\url{https://www.imperialviolet.org/2010/01/26/sts.html}",
  note         = "Accessed: 2022-2-12",
  language     = "en"
}
